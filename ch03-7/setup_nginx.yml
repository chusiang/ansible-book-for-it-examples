---

- name: Setup the nginx
  hosts: all
  vars:
    username: "chusiang"
    mail: "chusiang (at) drx.tw"
    blog: "http://note.drx.tw"

  tasks:
    # 執行 "apt-get update" 指令。
    - name: Update apt repo cache
      become: true
      apt:
        name: nginx
        update_cache: yes

    # 執行 "apt-get install nginx" 指令。
    - name: Install nginx with apt
      become: true
      apt:
        name: nginx
        state: present

    # 於網頁根目錄（DocumentRoot）編輯 index.html。
    - name: Modify index.html
      become: true
      template:
        src: templates/index.html.j2
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: "0644"
        backup: yes
      notify: restart nginx

    # （security）關閉 server_tokens：移除 server_tokens 前的 '#' 字元。
    - name: Turn server_tokens off
      become: true
      lineinfile:
        dest: /etc/nginx/nginx.conf
        regexp: "server_tokens off;"
        insertafter: "# server_tokens off;"
        line: "server_tokens off;"
        state: present
      notify: restart nginx

    # 啟動 Nginx 服務。
    - name: Start nginx (1/2)
      become: true
      service:
        name: nginx
        state: started
      when: ansible_virtualization_type != 'docker'

    # 當 service module 在 Docker container 裡不管用，就自己下指令啟動它！
    - name: Start nginx (2/2)
      become: true
      command: service nginx start
      args:
        warn: no
      register: start_nginx_result
      changed_when: '"[ OK ]" in start_nginx_result.stdout'
      when: ansible_virtualization_type == 'docker'
      tags: skip_ansible_lint

  # handlers：當特定事件被觸發後才會動作。一個 handler 可被多個 task
  #           關聯（notify），並於 playbook 的最後才會執行。
  handlers:
    # 執行 sudo service nginx restart 指令。此 handler task 將會與
    # Modify index.html 和 Turn server_tokens off 兩個 tasks 連動。
    - name: restart nginx
      become: true
      service:
        name: nginx
        state: restarted

  # post_tasks：在一般 tasks 和 handlers 之後執行的 tasks。
  post_tasks:
    # 取得網頁內容。
    - name: Get web context
      command: curl http://localhost
      args:
        warn: no
      register: web_context
      changed_when: false
      tags: skip_ansible_lint

    # 印出檢查結果。
    - name: Print web context
      debug:
        msg: "{{ web_context.stdout_lines }}"

# vim: ft=yaml.ansible :
